// Code generated by 'guts'. DO NOT EDIT.

// From terraform/block.go
export interface Block {
}

// From types/diagnostics.go
export type Diagnostics = (unknown | null)[];

// From hcl/structure.go
export interface File {
    Body: unknown;
    Bytes: string;
    // empty interface{} type, falling back to unknown
    Nav: unknown;
}

// From apitypes/apitypes.go
export interface NullHCLString {
    value: string;
    valid: boolean;
}

// From preview/preview.go
export interface Output {
    ModuleOutput: Value;
    Parameters: Parameter[];
    WorkspaceTags: TagBlocks;
    Files: Record<string, File | null> | null;
}

// From types/parameter.go
export interface Parameter extends ParameterData {
    value: NullHCLString;
    diagnostics: Diagnostics;
}

// From types/parameter.go
export interface ParameterData {
    name: string;
    display_name: string;
    description: string;
    type: ParameterType;
    form_type: ParameterFormType;
    styling: ParameterStyling;
    mutable: boolean;
    default_value: NullHCLString;
    icon: string;
    options: (ParameterOption | null)[];
    validations: (ParameterValidation | null)[];
    required: boolean;
    order: number;
    ephemeral: boolean;
}

// From provider/formtype.go
export type ParameterFormType = string;

// From types/parameter.go
export interface ParameterOption {
    name: string;
    description: string;
    value: NullHCLString;
    icon: string;
}

// From types/parameter.go
export interface ParameterStyling {
    placeholder?: string | null;
    disabled?: boolean | null;
    label?: string | null;
}

// From types/enum.go
export type ParameterType = string;

// From types/parameter.go
export interface ParameterValidation {
    validation_error: string;
    validation_regex: string | null;
    validation_min: number | null;
    validation_max: number | null;
    validation_monotonic: string | null;
}

// From apitypes/apitypes.go
export interface PreviewOutput {
    output: Output | null;
    diags: Diagnostics;
    parser_logs?: string;
}

// From types/tags.go
export interface Tag {
    Key: NullHCLString;
    Value: NullHCLString;
}

// From types/tags.go
export interface TagBlock {
    Tags: Tags;
    Block: Block | null;
}

// From types/tags.go
export type TagBlocks = TagBlock[];

// From types/tags.go
export type Tags = Tag[];

// From cty/value.go
export interface Value {
}


